@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Inventory Management System";
    var categories = ViewBag.Categories as SelectList;
}

@model IEnumerable<MiniInventory_Management.Model.Product>

<!-- ================================================================= -->
<!--                       MODALS                                      -->
<!-- ================================================================= -->
<!-- Add Product Modal (Existing) -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm" method="post">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="productCategory" class="form-label">Category</label>
                        <select id="productCategory" name="Category" class="form-select" required>
                            @if (categories != null)
                            {
                                foreach (var cat in categories)
                                {
                                    <option value="@cat.Text">@cat.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="productPrice" class="form-label">Price</label>
                        <input type="number" step="0.01" class="form-control" id="productPrice" name="Price" required>
                    </div>
                    <div class="mb-3">
                        <label for="productQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="productQuantity" name="Quantity" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" id="saveProductBtn" class="btn btn-primary">Save Product</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Universal Modal for View, Edit, and Delete actions -->
<div class="modal fade" id="actionModal" tabindex="-1" aria-labelledby="actionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="actionModalContent">
            <!-- Content for this modal is loaded dynamically via JavaScript -->
        </div>
    </div>
</div>


<!-- ================================================================= -->
<!--                       MAIN PAGE CONTENT                           -->
<!-- ================================================================= -->

<div class="card shadow border-0 p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="bi bi-box-seam me-2"></i> Inventory Management System
        </h2>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="bi bi-plus-lg"></i> + Add Product
        </button>
    </div>

    <!-- This div is used for displaying success/error messages after a page reload -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <!-- Filter Form -->
    <div class="card p-3 mb-4">
        <form asp-controller="Products" asp-action="Index" method="get" class="row g-3 align-items-end">
            <div class="col-md-6">
                <label class="form-label">Search Products</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-search"></i></span>
                    <input type="text" name="searchString" value="@Context.Request.Query["searchString"]" class="form-control" placeholder="Search by product name..." />
                </div>
            </div>
            <div class="col-md-4">
                <label class="form-label">Filter by Category</label>
                <select name="category" class="form-select" onchange="this.form.submit()">
                    <option value="">All Categories</option>
                    @if (categories != null)
                    {
                        foreach (var cat in categories)
                        {
                            <option value="@cat.Text" selected="@(Context.Request.Query["category"] == cat.Text)">@cat.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2 d-grid">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </form>
    </div>

    <!-- Product Table -->
    <table class="table table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Category</th>
                <th class="text-end">Price</th>
                <th class="text-end">Quantity</th>
                <th>Status</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var statusClass = item.Quantity == 0 ? "bg-danger" : item.Quantity <= 5 ? "bg-warning text-dark" : "bg-success";
                var statusText = item.Quantity == 0 ? "Out of Stock" : item.Quantity <= 5 ? "Low Stock" : "In Stock";
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Category</td>
                    <td class="text-end">@item.Price.ToString("C")</td>
                    <td class="text-end">@item.Quantity</td>
                    <td><span class="badge @statusClass">@statusText</span></td>
                    <td class="text-center">
                        <!-- IMPORTANT: Links are changed to buttons with data-url attributes -->
                        <button type="button" class="btn btn-sm btn-info me-1 action-button" data-url="@Url.Action("Details", "Products", new { id = item.Id })">View</button>
                        <button type="button" class="btn btn-sm btn-warning me-1 text-dark action-button" data-url="@Url.Action("Edit", "Products", new { id = item.Id })">Edit</button>
                        <button type="button" class="btn btn-sm btn-danger action-button" data-url="@Url.Action("Delete", "Products", new { id = item.Id })">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- ================================================================= -->
<!--                       PAGE-SPECIFIC SCRIPTS                       -->
<!-- ================================================================= -->
@section Scripts {
    <script>
        $(function () {
            // --- Add Product ---
            $('#saveProductBtn').on('click', function () {
                var form = $('#addProductForm');
                if (form.valid()) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "Products")',
                        data: form.serialize(),
                        success: function (response) {
                            if (response.success) {
                                window.location.href = '@Url.Action("Index", "Products")';
                            } else {
                                alert('Error: ' + (response.errors ? response.errors.join("\\n") : "An unknown error occurred."));
                            }
                        },
                        error: function () {
                            alert('An unexpected error occurred while communicating with the server.');
                        }
                    });
                }
            });

            // --- View, Edit, & Delete Logic ---
            var actionModal = new bootstrap.Modal(document.getElementById('actionModal'));
            var actionModalContent = $('#actionModalContent');

            // 1. Handle clicks on any action button
            $('.action-button').on('click', function () {
                var url = $(this).data('url');
                // Load content from the server into the modal
                $.get(url).done(function (data) {
                    actionModalContent.html(data);
                    actionModal.show();
                });
            });

            // 2. Handle form submission from within the universal modal
            actionModalContent.on('submit', 'form', function (e) {
                e.preventDefault(); // Prevent normal form submission
                var form = $(this);

                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            actionModal.hide();
                            window.location.href = '@Url.Action("Index", "Products")'; // Reload page to see changes
                        } else {
                            alert('Error: ' + (response.errors ? response.errors.join("\\n") : "An unknown error occurred."));
                        }
                    },
                    error: function () {
                        alert('An unexpected server error occurred.');
                    }
                });
            });
        });
    </script>
}